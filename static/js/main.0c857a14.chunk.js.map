{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","cursor","border","TextForm","useState","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","console","log","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c857a14.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a>\n                        </li>\n                    </ul>\n                    <div className=\"d-flex\">\n                        <div className=\"bg-primary rounded mx-2\" onClick={()=>(props.toggleMode)('primary')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                        <div className=\"bg-danger rounded mx-2\" onClick={()=>(props.toggleMode)('danger')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                        <div className=\"bg-success rounded mx-2\" onClick={()=>(props.toggleMode)('success')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                        <div className=\"bg-warning rounded mx-2\" onClick={()=>(props.toggleMode)('warning')} style={{height: '30px', width: '30px', cursor: 'pointer'}}></div>\n                        <div className=\"bg-dark rounded mx-2\" onClick={()=>(props.toggleMode)('dark')} style={{height: '30px', width: '30px', cursor: 'pointer', border: '2px solid white'}}></div>\n                    </div>\n                    <div className=\"bg-light rounded mx-2\" onClick={()=>(props.toggleMode)('light')} style={{height: '30px', width: '30px', cursor: 'pointer', border: '2px solid black'}}></div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About'\n  };","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    const handleCopy = () => {\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        document.getSelection().removeAllRanges();\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState('');\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const removeBodyClasses = ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success')\n  }\n\n  const toggleMode = (cls)=>{\n    removeBodyClasses();\n    console.log(cls)\n    document.body.classList.add('bg-'+cls)\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n    </div>\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}